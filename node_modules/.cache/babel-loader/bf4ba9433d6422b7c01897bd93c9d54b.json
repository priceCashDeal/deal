{"ast":null,"code":"var _jsxFileName = \"E:\\\\programin\\\\gitigit\\\\cashback\\\\src\\\\component\\\\ImageUpload.js\";\nimport React, { Component } from 'react';\nimport { storage } from '../firebase';\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      }\n    };\n\n    this.handleUpload = () => {\n      const {\n        image\n      } = this.state;\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      uploadTask.on('state_changed', snapshot => {\n        // progrss function ....\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        // error function ....\n        console.log(error);\n      }, () => {\n        // complete function ....\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          this.setState({\n            url\n          });\n        });\n      });\n    };\n\n    this.state = {\n      image: null,\n      url: '',\n      progress: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  render() {\n    const style = {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"progress\", {\n      value: this.state.progress,\n      max: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.url || 'http://via.placeholder.com/400x300',\n      alt: \"Uploaded images\",\n      height: \"300\",\n      width: \"400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["E:/programin/gitigit/cashback/src/component/ImageUpload.js"],"names":["React","Component","storage","ImageUpload","constructor","props","handleChange","e","target","files","image","setState","handleUpload","state","uploadTask","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","bind","render","style","height","display","flexDirection","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { storage } from '../firebase';\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: null,\n      url: '',\n      progress: 0\n    }\n    this.handleChange = this\n      .handleChange\n      .bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n  handleChange = e => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({ image }));\n    }\n  }\n  handleUpload = () => {\n    const { image } = this.state;\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on('state_changed',\n      (snapshot) => {\n        // progrss function ....\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n        this.setState({ progress });\n      },\n      (error) => {\n        // error function ....\n        console.log(error);\n      },\n      () => {\n        // complete function ....\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          this.setState({ url });\n        })\n      });\n  }\n  render() {\n    const style = {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    };\n    return (\n      <div style={style}>\n        <progress value={this.state.progress} max=\"100\" />\n        <br />\n        <input type=\"file\" onChange={this.handleChange} />\n        <button onClick={this.handleUpload}>Upload</button>\n        <br />\n        <img src={this.state.url || 'http://via.placeholder.com/400x300'} alt=\"Uploaded images\" height=\"300\" width=\"400\" />\n      </div>\n    )\n  }\n}\n\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}